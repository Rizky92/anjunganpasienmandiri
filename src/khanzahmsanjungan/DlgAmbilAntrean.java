/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package khanzahmsanjungan;

import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;

public class DlgAmbilAntrean extends javax.swing.JDialog {

    private final Connection koneksi = koneksiDB.condb();
    private final sekuel Sequel = new sekuel();
    private final validasi Valid = new validasi();
    private final String[] PREFIXHURUFAKTIF = koneksiDB.PREFIXHURUFAKTIF();
    
    private Map<String, Object> param = new HashMap<>();

    public DlgAmbilAntrean(java.awt.Frame parent, boolean id) {
        super(parent, id);
        initComponents();
        
        try (ResultSet rs = koneksi.createStatement().executeQuery(
            "select nama_instansi, alamat_instansi, kabupaten, propinsi, kontak, email from setting"
        )) {
            if (rs.next()) {
                param.put("namars", rs.getString("nama_instansi"));
                param.put("alamatrs", rs.getString("alamat_instansi"));
                param.put("kotars", rs.getString("kabupaten"));
                param.put("propinsirs", rs.getString("propinsi"));
                param.put("kontakrs", rs.getString("kontak"));
                param.put("emailrs", rs.getString("email"));
            }
        } catch (Exception e) {
            System.out.println("Notif : " + e);
        }
        
        jPanel3.remove(HurufA);
        jPanel3.remove(HurufB);
        jPanel3.remove(HurufC);
        jPanel3.remove(HurufD);
        jPanel3.remove(HurufE);
        jPanel3.remove(HurufF);
        
        for (String huruf : PREFIXHURUFAKTIF) {
            switch (huruf) {
                case "A": jPanel3.add(HurufA); break;
                case "B": jPanel3.add(HurufB); break;
                case "C": jPanel3.add(HurufC); break;
                case "D": jPanel3.add(HurufD); break;
                case "E": jPanel3.add(HurufE); break;
                case "F": jPanel3.add(HurufF); break;
            }
        }
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new component.Panel();
        jPanel2 = new javax.swing.JPanel();
        lblNamaAntrian = new component.Label();
        jPanel3 = new javax.swing.JPanel();
        HurufA = new widget.ButtonBig();
        HurufB = new widget.ButtonBig();
        HurufC = new widget.ButtonBig();
        HurufD = new widget.ButtonBig();
        HurufE = new widget.ButtonBig();
        HurufF = new widget.ButtonBig();
        jPanel4 = new javax.swing.JPanel();
        BtnKeluar = new widget.ButtonBig();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout(1, 1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 131, 62)));
        jPanel1.setForeground(new java.awt.Color(0, 131, 62));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 70));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(238, 238, 255));
        jPanel2.setForeground(new java.awt.Color(238, 238, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(60, 60));

        lblNamaAntrian.setForeground(new java.awt.Color(0, 131, 62));
        lblNamaAntrian.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNamaAntrian.setText("AMBIL ANTRIAN");
        lblNamaAntrian.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblNamaAntrian.setFont(new java.awt.Font("Inter", 1, 36)); // NOI18N
        lblNamaAntrian.setPreferredSize(new java.awt.Dimension(500, 75));
        jPanel2.add(lblNamaAntrian);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(238, 238, 255));
        jPanel3.setForeground(new java.awt.Color(238, 238, 255));
        jPanel3.setLayout(new java.awt.GridLayout(0, 2));

        HurufA.setText("ANTRIAN A");
        HurufA.setFont(new java.awt.Font("Inter", 1, 36)); // NOI18N
        HurufA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HurufAActionPerformed(evt);
            }
        });
        jPanel3.add(HurufA);

        HurufB.setText("ANTRIAN B");
        HurufB.setFont(new java.awt.Font("Inter", 1, 36)); // NOI18N
        HurufB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HurufBActionPerformed(evt);
            }
        });
        jPanel3.add(HurufB);

        HurufC.setText("ANTRIAN C");
        HurufC.setFont(new java.awt.Font("Inter", 1, 36)); // NOI18N
        HurufC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HurufCActionPerformed(evt);
            }
        });
        jPanel3.add(HurufC);

        HurufD.setText("ANTRIAN D");
        HurufD.setFont(new java.awt.Font("Inter", 1, 36)); // NOI18N
        HurufD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HurufDActionPerformed(evt);
            }
        });
        jPanel3.add(HurufD);

        HurufE.setText("ANTRIAN E");
        HurufE.setFont(new java.awt.Font("Inter", 1, 36)); // NOI18N
        HurufE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HurufEActionPerformed(evt);
            }
        });
        jPanel3.add(HurufE);

        HurufF.setText("ANTRIAN F");
        HurufF.setFont(new java.awt.Font("Inter", 1, 36)); // NOI18N
        HurufF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HurufFActionPerformed(evt);
            }
        });
        jPanel3.add(HurufF);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setBackground(new java.awt.Color(238, 238, 255));
        jPanel4.setForeground(new java.awt.Color(238, 238, 255));

        BtnKeluar.setBackground(new java.awt.Color(255, 255, 255));
        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/48x48/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('U');
        BtnKeluar.setText("KELUAR");
        BtnKeluar.setToolTipText("Alt+U");
        BtnKeluar.setFont(new java.awt.Font("Inter", 1, 18)); // NOI18N
        BtnKeluar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        BtnKeluar.setIconTextGap(0);
        BtnKeluar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        BtnKeluar.setPreferredSize(new java.awt.Dimension(250, 75));
        BtnKeluar.setVerticalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        jPanel4.add(BtnKeluar);

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void HurufAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HurufAActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        cetakAntrianHuruf("A");
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_HurufAActionPerformed

    private void HurufBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HurufBActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        cetakAntrianHuruf("B");
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_HurufBActionPerformed

    private void HurufCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HurufCActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        cetakAntrianHuruf("C");
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_HurufCActionPerformed

    private void HurufDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HurufDActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        cetakAntrianHuruf("D");
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_HurufDActionPerformed

    private void HurufEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HurufEActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        cetakAntrianHuruf("E");
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_HurufEActionPerformed

    private void HurufFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HurufFActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        cetakAntrianHuruf("F");
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_HurufFActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        tampil();
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgAmbilAntrean dialog = new DlgAmbilAntrean(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.ButtonBig BtnKeluar;
    private widget.ButtonBig HurufA;
    private widget.ButtonBig HurufB;
    private widget.ButtonBig HurufC;
    private widget.ButtonBig HurufD;
    private widget.ButtonBig HurufE;
    private widget.ButtonBig HurufF;
    private component.Panel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private component.Label lblNamaAntrian;
    // End of variables declaration//GEN-END:variables

    private void cetakAntrianHuruf(String prefix) {
        switch (prefix) {
            case "A":
                if (Sequel.executeRawSmc(
                    "insert into antriloketcetak_smc (nomor, tanggal, jam) values (concat('A', lpad(?, greatest(length(substring(nomor, 2)), 3), '0')), current_date(), current_time())",
                    String.valueOf(Integer.parseInt(HurufA.getText().substring(HurufA.getText().indexOf("(") + 2, HurufA.getText().length() - 1)) + 1)
                )) {
                    param.put("logo", Sequel.cariGambar("select logo from setting"));
                    Valid.printReportSmc("rptAntriLoketAPM.jasper", "report", "::[ Antrian Loket ]::", param, koneksiDB.PRINTER_ANTRIAN(), 1,
                        "select date_format(tanggal, '%d-%m-%Y') as tanggal, max(nomor) as nomor, " +
                        "jam from antriloketcetak_smc where left(nomor, 1) = 'A' and tanggal = current_date()");
                }
                break;
            case "B":
                if (Sequel.executeRawSmc(
                    "insert into antriloketcetak_smc (nomor, tanggal, jam) values (concat('B', lpad(?, greatest(length(substring(nomor, 2)), 3), '0')), current_date(), current_time())",
                    String.valueOf(Integer.parseInt(HurufB.getText().substring(HurufB.getText().indexOf("(") + 2, HurufB.getText().length() - 1)) + 1)
                )) {
                    param.put("logo", Sequel.cariGambar("select logo from setting"));
                    Valid.printReportSmc("rptAntriLoketAPM.jasper", "report", "::[ Antrian Loket ]::", param, koneksiDB.PRINTER_ANTRIAN(), 1,
                        "select date_format(tanggal, '%d-%m-%Y') as tanggal, max(nomor) as nomor, " +
                        "jam from antriloketcetak_smc where left(nomor, 1) = 'B' and tanggal = current_date()");
                }
                break;
            case "C":
                if (Sequel.executeRawSmc(
                    "insert into antriloketcetak_smc (nomor, tanggal, jam) values (concat('C', lpad(?, greatest(length(substring(nomor, 2)), 3), '0')), current_date(), current_time())",
                    String.valueOf(Integer.parseInt(HurufC.getText().substring(HurufC.getText().indexOf("(") + 2, HurufC.getText().length() - 1)) + 1)
                )) {
                    param.put("logo", Sequel.cariGambar("select logo from setting"));
                    Valid.printReportSmc("rptAntriLoketAPM.jasper", "report", "::[ Antrian Loket ]::", param, koneksiDB.PRINTER_ANTRIAN(), 1,
                        "select date_format(tanggal, '%d-%m-%Y') as tanggal, max(nomor) as nomor, " +
                        "jam from antriloketcetak_smc where left(nomor, 1) = 'C' and tanggal = current_date()");
                }
                break;
            case "D":
                if (Sequel.executeRawSmc(
                    "insert into antriloketcetak_smc (nomor, tanggal, jam) values (concat('D', lpad(?, greatest(length(substring(nomor, 2)), 3), '0')), current_date(), current_time())",
                    String.valueOf(Integer.parseInt(HurufD.getText().substring(HurufD.getText().indexOf("(") + 2, HurufD.getText().length() - 1)) + 1)
                )) {
                    param.put("logo", Sequel.cariGambar("select logo from setting"));
                    Valid.printReportSmc("rptAntriLoketAPM.jasper", "report", "::[ Antrian Loket ]::", param, koneksiDB.PRINTER_ANTRIAN(), 1,
                        "select date_format(tanggal, '%d-%m-%Y') as tanggal, max(nomor) as nomor, " +
                        "jam from antriloketcetak_smc where left(nomor, 1) = 'D' and tanggal = current_date()");
                }
                break;
            case "E":
                if (Sequel.executeRawSmc(
                    "insert into antriloketcetak_smc (nomor, tanggal, jam) values (concat('E', lpad(?, greatest(length(substring(nomor, 2)), 3), '0')), current_date(), current_time())",
                    String.valueOf(Integer.parseInt(HurufE.getText().substring(HurufE.getText().indexOf("(") + 2, HurufE.getText().length() - 1)) + 1)
                )) {
                    param.put("logo", Sequel.cariGambar("select logo from setting"));
                    Valid.printReportSmc("rptAntriLoketAPM.jasper", "report", "::[ Antrian Loket ]::", param, koneksiDB.PRINTER_ANTRIAN(), 1,
                        "select date_format(tanggal, '%d-%m-%Y') as tanggal, max(nomor) as nomor, " +
                        "jam from antriloketcetak_smc where left(nomor, 1) = 'E' and tanggal = current_date()");
                }
                break;
            case "F":
                if (Sequel.executeRawSmc(
                    "insert into antriloketcetak_smc (nomor, tanggal, jam) values (concat('F', lpad(?, greatest(length(substring(nomor, 2)), 3), '0')), current_date(), current_time())",
                    String.valueOf(Integer.parseInt(HurufF.getText().substring(HurufF.getText().indexOf("(") + 2, HurufF.getText().length() - 1)) + 1)
                )) {
                    param.put("logo", Sequel.cariGambar("select logo from setting"));
                    Valid.printReportSmc("rptAntriLoketAPM.jasper", "report", "::[ Antrian Loket ]::", param, koneksiDB.PRINTER_ANTRIAN(), 1,
                        "select date_format(tanggal, '%d-%m-%Y') as tanggal, max(nomor) as nomor, " +
                        "jam from antriloketcetak_smc where left(nomor, 1) = 'F' and tanggal = current_date()");
                }
                break;
        }
        tampil();
    }
    
    private void tampil() {
        for (String huruf : PREFIXHURUFAKTIF) {
            switch (huruf) {
                case "A": HurufA.setText("ANTRIAN A (" + Sequel.cariIsiSmc("select ifnull(max(nomor), 'A000') from antriloketcetak_smc where tanggal = current_date() and left(nomor, 1) = 'A'") + ")"); break;
                case "B": HurufB.setText("ANTRIAN B (" + Sequel.cariIsiSmc("select ifnull(max(nomor), 'B000') from antriloketcetak_smc where tanggal = current_date() and left(nomor, 1) = 'B'") + ")"); break;
                case "C": HurufC.setText("ANTRIAN C (" + Sequel.cariIsiSmc("select ifnull(max(nomor), 'C000') from antriloketcetak_smc where tanggal = current_date() and left(nomor, 1) = 'C'") + ")"); break;
                case "D": HurufD.setText("ANTRIAN D (" + Sequel.cariIsiSmc("select ifnull(max(nomor), 'D000') from antriloketcetak_smc where tanggal = current_date() and left(nomor, 1) = 'D'") + ")"); break;
                case "E": HurufE.setText("ANTRIAN E (" + Sequel.cariIsiSmc("select ifnull(max(nomor), 'E000') from antriloketcetak_smc where tanggal = current_date() and left(nomor, 1) = 'E'") + ")"); break;
                case "F": HurufF.setText("ANTRIAN F (" + Sequel.cariIsiSmc("select ifnull(max(nomor), 'F000') from antriloketcetak_smc where tanggal = current_date() and left(nomor, 1) = 'F'") + ")"); break;
            }
        }
    }
}
